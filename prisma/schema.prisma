// This is your Prisma schema file.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Production-Ready PostgreSQL Configuration
// Supports: Local Development + All Hosting Platforms
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  addresses Address[]
  orders    Order[]
  cartItems CartItem[]
  designs   Design[]
}

model Address {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  ad        String
  adres     String
  il        String
  ilce      String
  posta     String
  createdAt DateTime @default(now())
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  image       String?
  category    String?
  subcategory String?
  sizes       String? // JSON string olarak saklanacak
  prices      String? // JSON string olarak saklanacak
  features    String? // JSON string olarak saklanacak
  inStock     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int?     // opsiyonel: normal ürünler için
  designId  Int?     // opsiyonel: tasarım ürünleri için
  quantity  Int      @default(1)
  size      String?
  price     Float
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  product   Product? @relation(fields: [productId], references: [id])
  design    Design?  @relation(fields: [designId], references: [id])
}

model Order {
  id           Int         @id @default(autoincrement())
  orderNumber  String      @unique
  tarih        DateTime    @default(now())
  status       String      @default("pending") // pending, processing, shipped, delivered, cancelled
  totalAmount  Float
  shippingCost Float       @default(0)
  taxAmount    Float       @default(0)
  adres        String
  referans     String?
  odeme        Boolean     @default(false)
  kargo        String?
  trackingNumber String?
  userId       Int
  user         User        @relation(fields: [userId], references: [id])
  orderItems   OrderItem[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  designId  Int?     // opsiyonel: tasarım ürünleri için
  quantity  Int
  size      String?
  price     Float
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  design    Design?  @relation(fields: [designId], references: [id])
}

model SiteSettings {
  id                Int      @id @default(autoincrement())
  siteName          String   @default("Luna Lab")
  siteDescription   String?  @default("Kişiselleştirilmiş ürünler")
  logo              String?
  favicon           String?
  primaryColor      String   @default("#1f2937")
  secondaryColor    String   @default("#3b82f6")
  contactEmail      String?  @default("info@lunalab.com")
  contactPhone      String?
  contactAddress    String?
  socialFacebook    String?
  socialInstagram   String?
  socialTwitter     String?
  socialYoutube     String?
  aboutText         String?  @default("Hakkımızda metni buraya gelecek")
  privacyPolicy     String?  @default("Gizlilik politikası metni buraya gelecek")
  termsOfService    String?  @default("Kullanım şartları metni buraya gelecek")
  shippingInfo      String?  @default("Kargo bilgileri buraya gelecek")
  returnPolicy      String?  @default("İade politikası buraya gelecek")
  faqContent        String?  @default("Sık sorulan sorular buraya gelecek")
  maintenanceMode   Boolean  @default(false)
  maintenanceMessage String? @default("Site bakımda, lütfen daha sonra tekrar deneyin")
  googleAnalytics   String?
  facebookPixel     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

// TASARIM EDİTÖRÜ TABLOLARI

model Template {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  category    String   // fotograf-baskisi, canvas, fotokitap, etc.
  thumbnail   String
  width       Int
  height      Int
  isActive    Boolean  @default(true)
  isPremium   Boolean  @default(false)
  price       Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  elements    TemplateElement[]
  designs     Design[]
}

model TemplateElement {
  id          Int      @id @default(autoincrement())
  templateId  Int
  template    Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  type        String   // text, image, shape, background
  x           Float
  y           Float
  width       Float
  height      Float
  rotation    Float    @default(0)
  zIndex      Int      @default(0)
  properties  String   // JSON: {text, fontSize, color, imageSrc, etc.}
  isLocked    Boolean  @default(false)
  createdAt   DateTime @default(now())
}

model FrameSize {
  id          Int      @id @default(autoincrement())
  category    String   // fotograf-baskisi, canvas, etc.
  name        String   // 10x15 cm, 20x30 cm, etc.
  width       Int      // mm cinsinden
  height      Int      // mm cinsinden
  price       Float
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
  designs     Design[]
}

model ProductOption {
  id          Int      @id @default(autoincrement())
  category    String   // hangi kategori için
  name        String   // Mat/Parlak, Çerçeve Tipi, etc.
  type        String   // select, radio, checkbox
  options     String   // JSON: [{value, label, price}]
  isRequired  Boolean  @default(false)
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
}

model Design {
  id           Int      @id @default(autoincrement())
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  templateId   Int?
  template     Template? @relation(fields: [templateId], references: [id])
  frameSizeId  Int?
  frameSize    FrameSize? @relation(fields: [frameSizeId], references: [id])
  name         String
  category     String
  width        Int
  height       Int
  preview      String?  // base64 preview image
  data         String   // JSON: complete design data
  isCompleted  Boolean  @default(false)
  totalPrice   Float    @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  elements     DesignElement[]
  orderItems   OrderItem[]
  cartItems    CartItem[]
}

model DesignElement {
  id          Int      @id @default(autoincrement())
  designId    Int
  design      Design   @relation(fields: [designId], references: [id], onDelete: Cascade)
  type        String   // text, image, shape, background
  x           Float
  y           Float
  width       Float
  height      Float
  rotation    Float    @default(0)
  zIndex      Int      @default(0)
  properties  String   // JSON: element properties
  createdAt   DateTime @default(now())
}
